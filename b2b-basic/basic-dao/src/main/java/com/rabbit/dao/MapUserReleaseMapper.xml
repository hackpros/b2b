<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rabbit.dao.MapUserReleaseMapper">
  <resultMap id="BaseResultMap" type="com.rabbit.model.MapUserRelease">
    <id column="ID_" jdbcType="DECIMAL" property="id" />
    <result column="SYS_ADMIN_ID" jdbcType="DECIMAL" property="sysAdminId" />
    <result column="SYS_ORG_CODE" jdbcType="VARCHAR" property="sysOrgCode" />
    <result column="USR_ROLE_CODE" jdbcType="VARCHAR" property="usrRoleCode" />
    <association property="org"  column="code=SYS_ORG_CODE"   select="com.rabbit.dao.SysOrgMapper.selectByOrgCode"/>
    <association property="role" column="code=USR_ROLE_CODE" select="com.rabbit.dao.RoleSysMapper.selectByRoleCode"/>
  </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID_, SYS_ADMIN_ID, SYS_ORG_CODE, USR_ROLE_CODE
  </sql>
  <select id="selectByExample" parameterType="com.rabbit.model.MapUserReleaseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from BASE.MAP_USER_RELEASE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from BASE.MAP_USER_RELEASE
    where ID_ = #{id,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from BASE.MAP_USER_RELEASE
    where ID_ = #{id,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.rabbit.model.MapUserReleaseExample">
    delete from BASE.MAP_USER_RELEASE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rabbit.model.MapUserRelease">
    insert into BASE.MAP_USER_RELEASE (ID_, SYS_ADMIN_ID, SYS_ORG_CODE, 
      USR_ROLE_CODE)
    values (#{id,jdbcType=DECIMAL}, #{sysAdminId,jdbcType=DECIMAL}, #{sysOrgCode,jdbcType=VARCHAR}, 
      #{usrRoleCode,jdbcType=VARCHAR})
    <selectKey keyProperty="id" order="BEFORE" resultType="long">
      SELECT BASE.MAP_USER_RELEASE_SEQ.NEXTVAL FROM DUAL
    </selectKey>
  </insert>
  <insert id="insertSelective" parameterType="com.rabbit.model.MapUserRelease">
    insert into BASE.MAP_USER_RELEASE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID_,
      </if>
      <if test="sysAdminId != null">
        SYS_ADMIN_ID,
      </if>
      <if test="sysOrgCode != null">
        SYS_ORG_CODE,
      </if>
      <if test="usrRoleCode != null">
        USR_ROLE_CODE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="sysAdminId != null">
        #{sysAdminId,jdbcType=DECIMAL},
      </if>
      <if test="sysOrgCode != null">
        #{sysOrgCode,jdbcType=VARCHAR},
      </if>
      <if test="usrRoleCode != null">
        #{usrRoleCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.rabbit.model.MapUserReleaseExample" resultType="java.lang.Long">
    select count(*) from BASE.MAP_USER_RELEASE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update BASE.MAP_USER_RELEASE
    <set>
      <if test="record.id != null">
        ID_ = #{record.id,jdbcType=DECIMAL},
      </if>
      <if test="record.sysAdminId != null">
        SYS_ADMIN_ID = #{record.sysAdminId,jdbcType=DECIMAL},
      </if>
      <if test="record.sysOrgCode != null">
        SYS_ORG_CODE = #{record.sysOrgCode,jdbcType=VARCHAR},
      </if>
      <if test="record.usrRoleCode != null">
        USR_ROLE_CODE = #{record.usrRoleCode,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update BASE.MAP_USER_RELEASE
    set ID_ = #{record.id,jdbcType=DECIMAL},
      SYS_ADMIN_ID = #{record.sysAdminId,jdbcType=DECIMAL},
      SYS_ORG_CODE = #{record.sysOrgCode,jdbcType=VARCHAR},
      USR_ROLE_CODE = #{record.usrRoleCode,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.rabbit.model.MapUserRelease">
    update BASE.MAP_USER_RELEASE
    <set>
      <if test="sysAdminId != null">
        SYS_ADMIN_ID = #{sysAdminId,jdbcType=DECIMAL},
      </if>
      <if test="sysOrgCode != null">
        SYS_ORG_CODE = #{sysOrgCode,jdbcType=VARCHAR},
      </if>
      <if test="usrRoleCode != null">
        USR_ROLE_CODE = #{usrRoleCode,jdbcType=VARCHAR},
      </if>
    </set>
    where ID_ = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rabbit.model.MapUserRelease">
    update BASE.MAP_USER_RELEASE
    set SYS_ADMIN_ID = #{sysAdminId,jdbcType=DECIMAL},
      SYS_ORG_CODE = #{sysOrgCode,jdbcType=VARCHAR},
      USR_ROLE_CODE = #{usrRoleCode,jdbcType=VARCHAR}
    where ID_ = #{id,jdbcType=DECIMAL}
  </update>
  <select id="selectOnPage" resultMap="BaseResultMap">
    <!-- page --> 

   SELECT * FROM (

   SELECT PAGE.*, ROWNUM AS RN FROM (
    select
    <if test="example.distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from BASE.MAP_USER_RELEASE
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      ORDER BY ${example.orderByClause}
    </if>
     )  PAGE WHERE ROWNUM &lt;=  #{maxResults}  
 )   WHERE RN &gt;#{skipResults}
  </select>
  
  
  
  
  
  
  
  
</mapper>