<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jumore.b2b.daren.mapper.AppraiseMapper">
  <resultMap id="BaseResultMap" type="com.jumore.b2b.daren.model.Appraise">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="head" jdbcType="VARCHAR" property="head" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="img1" jdbcType="VARCHAR" property="img1" />
    <result column="img2" jdbcType="VARCHAR" property="img2" />
    <result column="img3" jdbcType="VARCHAR" property="img3" />
    <result column="contant" jdbcType="VARCHAR" property="contant" />
    <result column="create_time" jdbcType="DATE" property="createTime" />
    <result column="sort_inex" jdbcType="INTEGER" property="sortInex" />
    <result column="good" jdbcType="INTEGER" property="good" />
    <result column="better" jdbcType="INTEGER" property="better" />
    <result column="best" jdbcType="INTEGER" property="best" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, head, code, img1, img2, img3, contant, create_time, sort_inex, good, better, 
    best
  </sql>
  <select id="selectByExample" parameterType="com.jumore.b2b.daren.model.AppraiseQueryHelper" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from appraise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from appraise
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from appraise
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.jumore.b2b.daren.model.AppraiseQueryHelper">
    delete from appraise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jumore.b2b.daren.model.Appraise">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into appraise (id, name, head, 
      code, img1, img2, img3, 
      contant, create_time, sort_inex, 
      good, better, best)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{head,jdbcType=VARCHAR}, 
      #{code,jdbcType=VARCHAR}, #{img1,jdbcType=VARCHAR}, #{img2,jdbcType=VARCHAR}, #{img3,jdbcType=VARCHAR}, 
      #{contant,jdbcType=VARCHAR}, #{createTime,jdbcType=DATE}, #{sortInex,jdbcType=INTEGER}, 
      #{good,jdbcType=INTEGER}, #{better,jdbcType=INTEGER}, #{best,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jumore.b2b.daren.model.Appraise">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into appraise
    <trim prefix="(" suffix=")" suffixOverrides=",">
      id,
      <if test="name != null">
        name,
      </if>
      <if test="head != null">
        head,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="img1 != null">
        img1,
      </if>
      <if test="img2 != null">
        img2,
      </if>
      <if test="img3 != null">
        img3,
      </if>
      <if test="contant != null">
        contant,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="sortInex != null">
        sort_inex,
      </if>
      <if test="good != null">
        good,
      </if>
      <if test="better != null">
        better,
      </if>
      <if test="best != null">
        best,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=BIGINT},
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="head != null">
        #{head,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="img1 != null">
        #{img1,jdbcType=VARCHAR},
      </if>
      <if test="img2 != null">
        #{img2,jdbcType=VARCHAR},
      </if>
      <if test="img3 != null">
        #{img3,jdbcType=VARCHAR},
      </if>
      <if test="contant != null">
        #{contant,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=DATE},
      </if>
      <if test="sortInex != null">
        #{sortInex,jdbcType=INTEGER},
      </if>
      <if test="good != null">
        #{good,jdbcType=INTEGER},
      </if>
      <if test="better != null">
        #{better,jdbcType=INTEGER},
      </if>
      <if test="best != null">
        #{best,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jumore.b2b.daren.model.AppraiseQueryHelper" resultType="java.lang.Integer">
    select count(*) from appraise
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update appraise
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.head != null">
        head = #{record.head,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.img1 != null">
        img1 = #{record.img1,jdbcType=VARCHAR},
      </if>
      <if test="record.img2 != null">
        img2 = #{record.img2,jdbcType=VARCHAR},
      </if>
      <if test="record.img3 != null">
        img3 = #{record.img3,jdbcType=VARCHAR},
      </if>
      <if test="record.contant != null">
        contant = #{record.contant,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=DATE},
      </if>
      <if test="record.sortInex != null">
        sort_inex = #{record.sortInex,jdbcType=INTEGER},
      </if>
      <if test="record.good != null">
        good = #{record.good,jdbcType=INTEGER},
      </if>
      <if test="record.better != null">
        better = #{record.better,jdbcType=INTEGER},
      </if>
      <if test="record.best != null">
        best = #{record.best,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update appraise
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      head = #{record.head,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      img1 = #{record.img1,jdbcType=VARCHAR},
      img2 = #{record.img2,jdbcType=VARCHAR},
      img3 = #{record.img3,jdbcType=VARCHAR},
      contant = #{record.contant,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=DATE},
      sort_inex = #{record.sortInex,jdbcType=INTEGER},
      good = #{record.good,jdbcType=INTEGER},
      better = #{record.better,jdbcType=INTEGER},
      best = #{record.best,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jumore.b2b.daren.model.Appraise">
    update appraise
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="head != null">
        head = #{head,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="img1 != null">
        img1 = #{img1,jdbcType=VARCHAR},
      </if>
      <if test="img2 != null">
        img2 = #{img2,jdbcType=VARCHAR},
      </if>
      <if test="img3 != null">
        img3 = #{img3,jdbcType=VARCHAR},
      </if>
      <if test="contant != null">
        contant = #{contant,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="sortInex != null">
        sort_inex = #{sortInex,jdbcType=INTEGER},
      </if>
      <if test="good != null">
        good = #{good,jdbcType=INTEGER},
      </if>
      <if test="better != null">
        better = #{better,jdbcType=INTEGER},
      </if>
      <if test="best != null">
        best = #{best,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jumore.b2b.daren.model.Appraise">
    update appraise
    set name = #{name,jdbcType=VARCHAR},
      head = #{head,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      img1 = #{img1,jdbcType=VARCHAR},
      img2 = #{img2,jdbcType=VARCHAR},
      img3 = #{img3,jdbcType=VARCHAR},
      contant = #{contant,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=DATE},
      sort_inex = #{sortInex,jdbcType=INTEGER},
      good = #{good,jdbcType=INTEGER},
      better = #{better,jdbcType=INTEGER},
      best = #{best,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>